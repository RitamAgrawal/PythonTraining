1. Create a list of given structure and get the Access list as provided below: 

x=[100,200,300,400,500,[1,2,3,4,5,[10,20,30,40,50],6,7,8,9],600,700,800]
# Access list: [1, 2, 3, 4]
>>>print(x[5][0:4])

# Access list: [600, 700]
>>>print(x[-3:-1])

# Access list: [100, 300, 500, 600, 800]
>>>print(x[::2])

# Access list: [[800, 700, 600, [1, 2, 3, 4, 5, [10, 20, 30, 40, 50], 6, 7, 8, 9], 500, 400, 300, 200, 100]]
>>>print(x[::-1])

# Access list: [10]
>>>print(x[5][5][:1])

# Access list: [ ]
>>>print(x[5][5][:0])
=============================================================

2. Create a list of thousand numbers using range and xrange and see the difference between each
other.

xrange is used only in python 2.x.
This program is executed without any error in python2.x

ques2 = [x for x in range(1,1001)]
print("Using range:",ques2)
ques21 = [x for x in xrange(1,1001)]
print("Using xrange: ",ques21)
=============================================================

3. How Tuple is beneficial as compared to the list?

Advantages of Tuple:
• Tuples are fined size in nature i.e. we can't add/delete elements to/from a tuple.
• We can search any element in a tuple.
• Tuples are faster than lists, because they have a constant set of values.
• Tuples can be used as dictionary keys, because they contain immutable values like strings, numbers, etc.
=============================================================

4. Write a program in Python to iterate through the list of numbers in the range of 1,100 and print
the number which is divisible by 3 and is a multiple of 2.

seq = [x for x in range(1,1001)]
res = filter(lambda y: y%3==0 and y%2==0,seq)
print(res)
=============================================================

5. Write a program in Python to reverse a string and print only the vowel alphabet if it exists in the
string with their index.

def vowelIndex(word):
    reversed = word[::-1]
    vowel = ("a","e", "i", "o", "u", "A", "E", "I", "O", "U")
    result = []
    
    def lambdaFunction(i):
        if i in vowel:
            return True
        else:
            return False

    for idx in range(len(reversed)):
        index = idx
        is_vowel = lambdaFunction(reversed[idx])
        if is_vowel == True:
            tuple_res = (index,reversed[idx])
            result.append(tuple_res)

    print(result)
    return

vowelIndex("Manipal")
==========================================================================================

6. Write a program in Python to iterate through the string “hello my name is abcde” and print the
string which is having an even length.

iterable = "hello my name is abcde"
iterable_list = iterable.split(" ")

filtered_list = filter(lambda x: len(x)%2==0,iterable_list)

output = " ".join(list(filtered_list))
print(output)
==========================================================================================

7. Write a program in python to print the pair of numbers whose sum is equal to the result
number that is let's say 8.

x=[1,2,3,4,5,6,7,8,9,-1]
x.sort()
target = 8
res = []
for i in range(len(x)):
    for j in range(i+1,len(x)):
        if x[i] + x[j] == target:
            res.append((x[i],x[j]))
print(res)
==========================================================================================
8. Write a program in python to complete the following task.

# Create two lists such as even_list and odd_list
even_list = []
odd_list = []

# Ask user to enter a number in the range of 1,50 and make sure if the entered number is
# even, append it to the even_list and if the entered number is odd append it to the odd_list.
# Keep that in mind you can only add 5 items in each list

while True:
    inp = int(input("Enter a number between 1 and 50, both inclusive:" ))
    if inp % 2 == 0:
        even_list.append(inp)
        if len(even_list) == 5:
            resultant_list = even_list
            break
    else:
        odd_list.append(inp)
        if len(odd_list) == 5:
            resultant_list = odd_list
            break

# Make sure once you enter all the 5 elements, calculate the sum of the list and return the
# maximum of the list.

print("Even List :",even_list, "Odd List :",odd_list)
print("Resultant list is: ", resultant_list)
print("Sum:",sum(resultant_list), "Max Value: ", max(resultant_list))
==============================================================================================

9. Write a program to find out the occurrence of a specific character from an alphanumeric string.

input = input("Enter Alpha-numeric string: ")
unique = set(input)
output= ""
char_count = 0
for char in unique:
    if (ord(char) in range(97, 123)) or (ord(char) in range(65,91)):
        # char_res = ""
        char_list = filter(lambda x: x==char,input)
        char_res = char +"=" + str(len(list(char_list)))
        output += char_res+" "

print(output)
==============================================================================================
10. Generate and print another tuple whose values are even numbers in the given tuple
(1,2,3,4,5,6,7,8,9,10).

given_tuple = (1,2,3,4,5,6,7,8,9,10)
result = filter(lambda x: x%2==0, list(given_tuple))
print(tuple(result))